{"version":3,"file":"static/js/127.c60e40b2.chunk.js","mappings":"oRAUA,MAwIA,GAAeA,EAAAA,EAAAA,KAxIUC,IAChB,CACLC,SAASC,EAAAA,EAAAA,IAAWF,OAIIG,IAAQC,EAAAA,EAAAA,GAAA,IAC/BC,EAAAA,EAAAA,IACD,CACEC,cACF,MACAH,KA6HJ,EAzHqBI,IAGnB,MAAOC,EAAWC,IAAYC,EAAAA,EAAAA,UAAS,IAEvC,IAAIC,GAAUC,EAAAA,EAAAA,cACd,MAAOC,IAAQH,EAAAA,EAAAA,WAAS,GAsCxB,OATAI,EAAAA,EAAAA,YAAU,KACR,MAAMb,EAAUc,eAAeC,QAAQ,YACvB,OAAZf,EACFM,EAAMD,cAAcC,EAAMN,SAE1BM,EAAMD,cAAcL,EACtB,GACC,CAACM,KAGFU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,WAAAC,QAAsB,IAATT,EAAgB,OAAS,IAAKM,UACvDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBF,EAAAA,EAAAA,MAAA,MAAII,UAAU,QAAOF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MACEC,UAAU,UACV,YAAU,MACV,cAAY,QACZE,QAASA,KACPhB,EAAMD,cAAc,MAAM,EAE5B,aAAW,MAAKa,UAEhBC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,IAAGN,SAAC,WAEfC,EAAAA,EAAAA,KAAA,MACEC,UAAU,UACV,YAAU,MACV,cAAY,OACZE,QAASA,KACPhB,EAAMD,cAAc,MAAM,EAE5B,aAAW,MAAKa,UAEhBC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,IAAGN,SAAC,kBAKrBC,EAAAA,EAAAA,KAAA,WAASC,UAAU,eAAcF,UAC/BC,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAAAP,UACRC,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACN,UAAU,mEAAkEF,UAC/EC,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,KAAKT,UAAU,oBAAmBF,UACjDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBF,UAC3BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,4BAA2BF,SAAA,EACxCF,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,GAAG,eAAeJ,UAAU,kBAAiBF,SAAA,EACjDC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYF,SAAC,WAAc,YAE7CC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBF,SAAC,oBACjCC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWF,SAAC,qGAIzBF,EAAAA,EAAAA,MAACc,EAAAA,EAAI,CAACV,UAAU,OAAMF,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYF,UACzBC,EAAAA,EAAAA,KAAA,SACEY,KAAK,QACLX,UAAU,oBACVY,GAAG,qBACHC,YAAY,cACZC,aAAa,MACbC,SAvFOC,IAC7B5B,EAAS4B,EAAEC,OAAOC,MAAM,EAuFFC,UAAQ,OAGZpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACxBC,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CACLpB,UAAU,6BACVE,QAzFLmB,UACjB,IACC,MAAMC,EAAS,CACdC,MAAMpC,SAI0BqC,EAAAA,EAAAA,IAAeF,GAG7ChC,EAAQmC,KAAK,qBAEbC,MAAM,8BAEV,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EAAO,QACrB,GAyE0C7B,SACrB,gCAYlB,G","sources":["views/backend/pages/auth/recover-pswd.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\n// rtl\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { rtlModeAction, getRtlMode } from '../../../../store/mode/rtlmode';\r\nimport { forgotPassword } from \"../../../../store/redux/API/auth/Register\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rtlMode: getRtlMode(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  ...bindActionCreators(\r\n    {\r\n      rtlModeAction,\r\n    },\r\n    dispatch\r\n  ),\r\n});\r\n\r\nconst RecoverPswd = (props) => {\r\n\r\n\r\n  const [userEmail, setEmail] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  const [show] = useState(false);\r\n\r\n\r\n\r\n  const handleUserEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n\r\n  const handlerest = async () => {\r\n    try {\r\n     const formData={\r\n      email:userEmail\r\n     }\r\n      \r\n     \r\n      const isPasswordCorrect = await forgotPassword(formData);\r\n  \r\n      if (isPasswordCorrect) {\r\n        history.push(\"/pages/verify-otp\");\r\n      } else {\r\n        alert(\"Incorrect password or email\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"error\");\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const rtlMode = sessionStorage.getItem('rtl-mode');\r\n    if (rtlMode === null) {\r\n      props.rtlModeAction(props.rtlMode);\r\n    } else {\r\n      props.rtlModeAction(rtlMode);\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <>\r\n      <div className={`rtl-box ${show === true ? 'show' : ''}`}>\r\n        <div className=\"rtl-panel\">\r\n          <ul className=\"modes\">\r\n            <li\r\n              className=\"dir-btn\"\r\n              data-mode=\"rtl\"\r\n              data-active=\"false\"\r\n              onClick={() => {\r\n                props.rtlModeAction('ltl');\r\n              }}\r\n              data-value=\"ltr\"\r\n            >\r\n              <Link to=\"#\">LTR</Link>\r\n            </li>\r\n            <li\r\n              className=\"dir-btn\"\r\n              data-mode=\"rtl\"\r\n              data-active=\"true\"\r\n              onClick={() => {\r\n                props.rtlModeAction('rtl');\r\n              }}\r\n              data-value=\"rtl\"\r\n            >\r\n              <Link to=\"#\">RTL</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <section className=\"sign-in-page\">\r\n        <Container>\r\n          <Row className=\"row justify-content-center align-items-center height-self-center\">\r\n            <Col lg=\"5\" md=\"12\" className=\"align-self-center\">\r\n            <div className=\"sign-user_card\">\r\n                <div className=\"sign-in-page-data\">\r\n                  <div className=\"sign-in-from w-100 m-auto\">\r\n                    <Link to=\"/pages/login\" className=\"back-arrow-link\">\r\n                      <span className=\"back-arrow\">&#8592;</span> Back\r\n                    </Link>\r\n                    <h3 className=\"mb-3 text-center\">Reset Password</h3>\r\n                    <p className=\"text-body\">\r\n                      Enter your email address, and we'll send you an email with\r\n                      instructions to reset your password.\r\n                    </p>\r\n                    <Form className=\"mt-4\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"form-control mb-0\"\r\n                          id=\"exampleInputEmail2\"\r\n                          placeholder=\"Enter email\"\r\n                          autoComplete=\"off\"\r\n                          onChange={handleUserEmailChange}\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div className=\"sign-info\">\r\n                        <Button\r\n                          className=\"btn btn-hover btn-primary1\"\r\n                          onClick={handlerest}\r\n                        >\r\n                          Reset\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecoverPswd);\r\n"],"names":["connect","state","rtlMode","getRtlMode","dispatch","_objectSpread","bindActionCreators","rtlModeAction","props","userEmail","setEmail","useState","history","useHistory","show","useEffect","sessionStorage","getItem","_jsxs","_Fragment","children","_jsx","className","concat","onClick","Link","to","Container","Row","Col","lg","md","Form","type","id","placeholder","autoComplete","onChange","e","target","value","required","Button","async","formData","email","forgotPassword","push","alert","error","console","log"],"sourceRoot":""}